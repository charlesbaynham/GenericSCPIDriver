# Default image, if not specified
image: python:3.8

stages:
  - Build Documentation
  - Compile Documentation
  - Static Analysis
  - Test
  - Build Release
  - Publish Pages

# Make a template for steps that use a python virtual env
.py_venv:
  before_script:
    # Make a virtual environment to install deps into (this will be cached for each step)
    - export
    - python --version
    - pip install poetry
    # Update all dependencies as if being installed from PyPI
    - poetry update --lock
    - poetry install

### Linting ###

black:
  image:
    name: cytopia/black
    entrypoint: [""]
  stage: Static Analysis
  script:
    - black --check generic_scpi_driver
  allow_failure: true
  needs: []

### Tests ###

.pytest:
  extends: .py_venv
  stage: Test
  script:
    - poetry run pytest

  coverage: /^TOTAL.+?(\d+\%)$/
  needs: []

pytest-py8:
  extends: .pytest
  image:
    name: python:3.8

pytest-py9:
  extends: .pytest
  image:
    name: python:3.9

pytest-py10:
  extends: .pytest
  image:
    name: python:3.10

pytest-py11:
  extends: .pytest
  image:
    name: python:3.11

pytest-py12:
  extends: .pytest
  image:
    name: python:3.12

pytest-py13:
  extends: .pytest
  image:
    name: python:3.13

### Build for release if it's tagged ###
build:
  stage: Build Release
  extends: .py_venv
  script:
    - pip install twine
    - poetry build
    - export TWINE_USERNAME=__token__
    - twine upload dist/* --verbose
  artifacts:
    paths:
      - build.tar.gz
    expire_in: 1000 yrs
  rules:
    - if: $CI_COMMIT_TAG
      when: always

### Documentation ###

# Upload the documentation to pages if it's a tagged commit
pages:
  extends: .py_venv
  stage: Publish Pages
  needs: []
  script:
    - poetry run sphinx-build docs public -b html
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - if: $CI_COMMIT_BRANCH == "master"
      when: always
# pdf_make:
#   extends: .py_venv
#   stage: Build Documentation
#   needs: []
#   script:
#     - poetry run sphinx-build docs latex -b latex

#   artifacts:
#     paths:
#     - latex
#     expire_in: 1 hour

# pdf_compile:
#   needs: ["pdf_make"]
#   stage: Compile Documentation
#   image:  charlesbaynham/ctanfull
#   artifacts:
#     paths:
#     - generic_scpi_driver.pdf
#     expose_as: "Manual"
#     name: ${CI_COMMIT_REF_SLUG}_manual.pdf
#   script:
#     - cd latex
#     - make
#     - cp generic_scpi_driver.pdf ../generic_scpi_driver.pdf
